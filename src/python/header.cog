/*
 * Copyright (C) 2006-2020  Music Technology Group - Universitat Pompeu Fabra
 *
 * This file is part of Essentia
 *
 * Essentia is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License as published by the Free
 * Software Foundation (FSF), either version 3 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the Affero GNU General Public License
 * version 3 along with this program.  If not, see http://www.gnu.org/licenses/
 */

// NOTE: This source code is auto-generated.

#ifndef ESSENTIAJS_H
#define ESSENTIAJS_H

#include <vector>


class EssentiaJS {
  public:
    // property to store the current essentia library version
    std::string essentiaVersion;
    // constructor for instantiating the essentia algo registry with an optional argument to enable debug mode 
    EssentiaJS(bool debugger=false);
    // destructor for shutdown essentia instance
    ~EssentiaJS();
    // method for generating frames from a given audio signal
    std::vector<std::vector<float> > frameGenerator(std::vector<float>& signal, int frameSize, int hopSize);

    // NOTE: The following code snippets are machine generated. Do not edit.    
    /*[[[cog
    import cog
    from .code_generator import generate_headers
    headers = generate_headers()
    cog.outl(" ")
    for ln in headers:
      cog.outl("%s;" % ln)
    ]]]*/
    //[[[end]]]
};

#endif  // ESSENTIAJS_H